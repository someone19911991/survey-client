{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Garik\\\\Desktop\\\\task2\\\\client\\\\src\\\\components\\\\Survey\\\\Survey.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useAppSelector } from \"../../hooks/redux\";\nimport * as yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Survey = () => {\n  _s();\n  const {\n    questions\n  } = useAppSelector(state => state.questionReducer);\n  const question = questions[1];\n  const questionLabel = question.inputLabel;\n  // @ts-ignore\n  const schema = yup.object().shape({\n    [questionLabel]: question.rules\n  });\n  const {\n    register,\n    watch,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  const onSubmit = data => console.log(data);\n  useEffect(() => {\n    watch(questionLabel, false);\n  }, [errors]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [!Array.isArray(questionLabel) && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ...register(questionLabel)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 47\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: JSON.stringify(errors.question_1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 13\n  }, this);\n};\n_s(Survey, \"iQ2AnFE25vuMDsG9b6L8/PBpTDU=\", false, function () {\n  return [useAppSelector, useForm];\n});\n_c = Survey;\nexport default Survey;\nvar _c;\n$RefreshReg$(_c, \"Survey\");","map":{"version":3,"names":["React","useEffect","useAppSelector","yup","useForm","yupResolver","Survey","questions","state","questionReducer","question","questionLabel","inputLabel","schema","object","shape","rules","register","watch","handleSubmit","formState","errors","resolver","onSubmit","data","console","log","Array","isArray","JSON","stringify","question_1"],"sources":["C:/Users/Garik/Desktop/task2/client/src/components/Survey/Survey.tsx"],"sourcesContent":["import React, {useEffect} from \"react\";\nimport { useAppSelector } from \"../../hooks/redux\";\nimport * as yup from \"yup\";\nimport {useForm} from \"react-hook-form\";\nimport {yupResolver} from \"@hookform/resolvers/yup\";\n\nconst Survey = () => {\n    const { questions } = useAppSelector((state) => state.questionReducer);\n    const question = questions[1];\n    const questionLabel = question.inputLabel;\n    // @ts-ignore\n    const schema = yup.object().shape({[questionLabel]: question.rules})\n    const {register, watch, handleSubmit, formState: {errors}} = useForm({resolver: yupResolver(schema)})\n\n    const onSubmit = (data: any) => console.log(data);\n\n    useEffect(() => {\n        watch(questionLabel, false);\n    }, [errors])\n\n\n    return (<div>\n        <form onSubmit={handleSubmit(onSubmit)}>\n            {!Array.isArray(questionLabel) && <input type=\"text\" {...register(questionLabel)}/>}\n            <p>{JSON.stringify(errors.question_1)}</p>\n            <div>\n                <button>Submit</button>\n            </div>\n        </form>\n    </div>);\n};\n\nexport default Survey;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,SAASC,cAAc,QAAQ,mBAAmB;AAClD,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,SAAQC,OAAO,QAAO,iBAAiB;AACvC,SAAQC,WAAW,QAAO,yBAAyB;AAAC;AAEpD,MAAMC,MAAM,GAAG,MAAM;EAAA;EACjB,MAAM;IAAEC;EAAU,CAAC,GAAGL,cAAc,CAAEM,KAAK,IAAKA,KAAK,CAACC,eAAe,CAAC;EACtE,MAAMC,QAAQ,GAAGH,SAAS,CAAC,CAAC,CAAC;EAC7B,MAAMI,aAAa,GAAGD,QAAQ,CAACE,UAAU;EACzC;EACA,MAAMC,MAAM,GAAGV,GAAG,CAACW,MAAM,EAAE,CAACC,KAAK,CAAC;IAAC,CAACJ,aAAa,GAAGD,QAAQ,CAACM;EAAK,CAAC,CAAC;EACpE,MAAM;IAACC,QAAQ;IAAEC,KAAK;IAAEC,YAAY;IAAEC,SAAS,EAAE;MAACC;IAAM;EAAC,CAAC,GAAGjB,OAAO,CAAC;IAACkB,QAAQ,EAAEjB,WAAW,CAACQ,MAAM;EAAC,CAAC,CAAC;EAErG,MAAMU,QAAQ,GAAIC,IAAS,IAAKC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EAEjDvB,SAAS,CAAC,MAAM;IACZiB,KAAK,CAACP,aAAa,EAAE,KAAK,CAAC;EAC/B,CAAC,EAAE,CAACU,MAAM,CAAC,CAAC;EAGZ,oBAAQ;IAAA,uBACJ;MAAM,QAAQ,EAAEF,YAAY,CAACI,QAAQ,CAAE;MAAA,WAClC,CAACI,KAAK,CAACC,OAAO,CAACjB,aAAa,CAAC,iBAAI;QAAO,IAAI,EAAC,MAAM;QAAA,GAAKM,QAAQ,CAACN,aAAa;MAAC;QAAA;QAAA;QAAA;MAAA,QAAG,eACnF;QAAA,UAAIkB,IAAI,CAACC,SAAS,CAACT,MAAM,CAACU,UAAU;MAAC;QAAA;QAAA;QAAA;MAAA,QAAK,eAC1C;QAAA,uBACI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAuB;QAAA;QAAA;QAAA;MAAA,QACrB;IAAA;MAAA;MAAA;MAAA;IAAA;EACH;IAAA;IAAA;IAAA;EAAA,QACL;AACV,CAAC;AAAC,GAxBIzB,MAAM;EAAA,QACcJ,cAAc,EAKyBE,OAAO;AAAA;AAAA,KANlEE,MAAM;AA0BZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module"}