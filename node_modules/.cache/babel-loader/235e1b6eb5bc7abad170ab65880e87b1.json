{"ast":null,"code":"import * as yup from \"yup\";\nimport { questions } from \"../consts\";\nexport const useQuestion = questionIndex => {\n  // const { questions } = useAppSelector((state) => state.questionReducer);\n  const qIndex = questionIndex;\n  const question = questions[qIndex];\n  let fieldName = question.fieldName;\n  let validationSchema = yup.object().shape({\n    [fieldName]: question.rules\n  });\n  if (!fieldName && question.multiple) {\n    const rulesToAdd = {};\n    question.multiple.map(q => {\n      rulesToAdd[q.fieldName] = q.rules;\n    });\n    validationSchema = yup.object().shape({\n      ...rulesToAdd\n    });\n  }\n  return {\n    questions,\n    question,\n    fieldName,\n    validationSchema\n  };\n};\nexport const useSurvey = () => {\n  // const survey = localStorage.getItem(\"survey\");\n  // if (survey) {\n  //     const confirm = window.confirm(\n  //         \"Would you like to continue the previous survey?\"\n  //     );\n  //     if (confirm) {\n  //         const lsAnsweredQuestions = JSON.parse(survey) as LSSurvey;\n  //         setAnsweredQuestions(lsAnsweredQuestions);\n  //         setQuestionIndex(lsAnsweredQuestions.length);\n  //         setContinueSurvey(true);\n  //     } else {\n  //         localStorage.removeItem(\"survey\");\n  //     }\n  // } else {\n  //     const confirm = window.confirm(\n  //         \"Would you like to continue your survey after quitting the page?\"\n  //     );\n  //     if (confirm) {\n  //         localStorage.setItem(\"survey\", JSON.stringify([]));\n  //         setContinueSurvey(true);\n  //     } else {\n  //         localStorage.removeItem(\"survey\");\n  //     }\n  // }\n};","map":{"version":3,"names":["yup","questions","useQuestion","questionIndex","qIndex","question","fieldName","validationSchema","object","shape","rules","multiple","rulesToAdd","map","q","useSurvey"],"sources":["C:/Users/Garik/Desktop/task2/client/src/hooks/index.ts"],"sourcesContent":["import * as yup from \"yup\";\nimport {questions} from \"../consts\";\nimport {IQuestion} from \"../store/types\";\n\nexport const useQuestion = (questionIndex: number) => {\n    // const { questions } = useAppSelector((state) => state.questionReducer);\n    const qIndex = questionIndex as keyof IQuestion[];\n\n    const question = questions[qIndex];\n    let fieldName = question.fieldName;\n    let validationSchema = yup.object().shape({\n        [fieldName]: question.rules,\n    });\n    if (!fieldName && question.multiple) {\n        const rulesToAdd: { [key: string]: any } = {};\n        question.multiple.map((q) => {\n            rulesToAdd[q.fieldName] = q.rules;\n        });\n        validationSchema = yup.object().shape({ ...rulesToAdd });\n    }\n\n    return { questions, question, fieldName, validationSchema };\n};\n\nexport const useSurvey = () => {\n    // const survey = localStorage.getItem(\"survey\");\n    // if (survey) {\n    //     const confirm = window.confirm(\n    //         \"Would you like to continue the previous survey?\"\n    //     );\n    //     if (confirm) {\n    //         const lsAnsweredQuestions = JSON.parse(survey) as LSSurvey;\n    //         setAnsweredQuestions(lsAnsweredQuestions);\n    //         setQuestionIndex(lsAnsweredQuestions.length);\n    //         setContinueSurvey(true);\n    //     } else {\n    //         localStorage.removeItem(\"survey\");\n    //     }\n    // } else {\n    //     const confirm = window.confirm(\n    //         \"Would you like to continue your survey after quitting the page?\"\n    //     );\n    //     if (confirm) {\n    //         localStorage.setItem(\"survey\", JSON.stringify([]));\n    //         setContinueSurvey(true);\n    //     } else {\n    //         localStorage.removeItem(\"survey\");\n    //     }\n    // }\n}"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,KAAK;AAC1B,SAAQC,SAAS,QAAO,WAAW;AAGnC,OAAO,MAAMC,WAAW,GAAIC,aAAqB,IAAK;EAClD;EACA,MAAMC,MAAM,GAAGD,aAAkC;EAEjD,MAAME,QAAQ,GAAGJ,SAAS,CAACG,MAAM,CAAC;EAClC,IAAIE,SAAS,GAAGD,QAAQ,CAACC,SAAS;EAClC,IAAIC,gBAAgB,GAAGP,GAAG,CAACQ,MAAM,EAAE,CAACC,KAAK,CAAC;IACtC,CAACH,SAAS,GAAGD,QAAQ,CAACK;EAC1B,CAAC,CAAC;EACF,IAAI,CAACJ,SAAS,IAAID,QAAQ,CAACM,QAAQ,EAAE;IACjC,MAAMC,UAAkC,GAAG,CAAC,CAAC;IAC7CP,QAAQ,CAACM,QAAQ,CAACE,GAAG,CAAEC,CAAC,IAAK;MACzBF,UAAU,CAACE,CAAC,CAACR,SAAS,CAAC,GAAGQ,CAAC,CAACJ,KAAK;IACrC,CAAC,CAAC;IACFH,gBAAgB,GAAGP,GAAG,CAACQ,MAAM,EAAE,CAACC,KAAK,CAAC;MAAE,GAAGG;IAAW,CAAC,CAAC;EAC5D;EAEA,OAAO;IAAEX,SAAS;IAAEI,QAAQ;IAAEC,SAAS;IAAEC;EAAiB,CAAC;AAC/D,CAAC;AAED,OAAO,MAAMQ,SAAS,GAAG,MAAM;EAC3B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ,CAAC"},"metadata":{},"sourceType":"module"}