{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { QuestionTypes } from \"../types\";\nimport * as yup from \"yup\";\nimport { no_match, question_2, question_3, question_4, question_8, required_field, validDateRegex } from \"../../consts\";\nconst initialState = {\n  questions: [{\n    question: \"When would you purchase a DVD player if you don't already own one?\",\n    inputLabel: \"question_1\",\n    currentValue: \"\",\n    type: QuestionTypes.textInput,\n    rules: yup.string().trim().required(required_field)\n  }, {\n    question: \"Would you be interested in software that allows you to have control over profanity, nudity, and violence in movies?\",\n    inputLabel: \"question_2\",\n    currentValue: question_2,\n    type: QuestionTypes.radio,\n    rules: yup.string().oneOf(question_2, no_match).typeError(required_field)\n  }, {\n    question: \"What type of DVD player do you own?\",\n    inputLabel: \"question_3\",\n    currentValue: question_3,\n    type: QuestionTypes.select,\n    rules: yup.string().oneOf(question_3, no_match).typeError(required_field)\n  }, {\n    question: \"Do you mainly purchase or rent movies you view?\",\n    inputLabel: \"question_4\",\n    currentValue: question_4,\n    type: QuestionTypes.radio,\n    rules: yup.string().oneOf(question_4, required_field).typeError(required_field)\n  }, {\n    question: \"How much do you spend renting and/or buying movies per month(in USD)?\",\n    inputLabel: \"question_5\",\n    currentValue: 0,\n    type: QuestionTypes.numberInput,\n    rules: yup.number().required(required_field).typeError('Numeric values only accepted')\n  }, {\n    question: \"Type your first name, last name and email address\",\n    inputLabel: [\"firstName\", \"lastName\", \"email\"],\n    multiple: {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\"\n    },\n    rules: {\n      firstName: yup.string().trim().required('First name is required'),\n      lastName: yup.string().trim().required('Last name is required'),\n      email: yup.string().email('Must be a valid email').trim().required('Email is required')\n    }\n  }, {\n    question: \"When is your birthday?\",\n    inputLabel: \"question_8\",\n    currentValue: '1997-12-12',\n    type: QuestionTypes.date,\n    rules: yup.string().matches(validDateRegex, \"Invalid date\")\n  }, {\n    question: \"What is your gender?\",\n    inputLabel: \"question_8\",\n    currentValue: question_8,\n    type: QuestionTypes.radio,\n    rules: yup.string().oneOf(question_8, required_field).typeError(required_field)\n  }],\n  answers: []\n};\nconst QuestionSlice = createSlice({\n  name: \"question\",\n  initialState,\n  reducers: {}\n});\nconst questionReducer = QuestionSlice.reducer;\nexport { questionReducer };","map":{"version":3,"names":["createSlice","QuestionTypes","yup","no_match","question_2","question_3","question_4","question_8","required_field","validDateRegex","initialState","questions","question","inputLabel","currentValue","type","textInput","rules","string","trim","required","radio","oneOf","typeError","select","numberInput","number","multiple","firstName","lastName","email","date","matches","answers","QuestionSlice","name","reducers","questionReducer","reducer"],"sources":["C:/Users/Garik/Desktop/task2/client/src/store/reducers/QuestionSlice.ts"],"sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\nimport {IQuestionInitialState, QuestionTypes} from \"../types\";\nimport * as yup from \"yup\";\nimport {no_match, question_2, question_3, question_4, question_8, required_field, validDateRegex} from \"../../consts\";\n\nconst initialState: IQuestionInitialState = {\n    questions: [\n        {\n            question:\n                \"When would you purchase a DVD player if you don't already own one?\",\n            inputLabel: \"question_1\",\n            currentValue: \"\",\n            type: QuestionTypes.textInput,\n            rules: yup.string().trim().required(required_field)\n        },\n        {\n            question:\n                \"Would you be interested in software that allows you to have control over profanity, nudity, and violence in movies?\",\n            inputLabel: \"question_2\",\n            currentValue: question_2,\n            type: QuestionTypes.radio,\n            rules: yup.string().oneOf(question_2, no_match).typeError(required_field)\n        },\n        {\n            question: \"What type of DVD player do you own?\",\n            inputLabel: \"question_3\",\n            currentValue: question_3,\n            type: QuestionTypes.select,\n            rules: yup.string().oneOf(question_3, no_match).typeError(required_field)\n        },\n        {\n            question: \"Do you mainly purchase or rent movies you view?\",\n            inputLabel: \"question_4\",\n            currentValue: question_4,\n            type: QuestionTypes.radio,\n            rules: yup.string().oneOf(question_4, required_field).typeError(required_field)\n        },\n        {\n            question:\n                \"How much do you spend renting and/or buying movies per month(in USD)?\",\n            inputLabel: \"question_5\",\n            currentValue: 0,\n            type: QuestionTypes.numberInput,\n            rules: yup.number().required(required_field).typeError('Numeric values only accepted')\n        },\n        {\n            question: \"Type your first name, last name and email address\",\n            inputLabel: [\"firstName\", \"lastName\", \"email\"],\n            multiple: {\n                firstName: \"\",\n                lastName: \"\",\n                email: \"\",\n            },\n            rules: {\n                firstName: yup.string().trim().required('First name is required'),\n                lastName: yup.string().trim().required('Last name is required'),\n                email: yup.string().email('Must be a valid email').trim().required('Email is required'),\n            }\n        },\n        {\n            question: \"When is your birthday?\",\n            inputLabel: \"question_8\",\n            currentValue: '1997-12-12',\n            type: QuestionTypes.date,\n            rules: yup.string().matches(validDateRegex, \"Invalid date\"),\n        },\n        {\n            question: \"What is your gender?\",\n            inputLabel: \"question_8\",\n            currentValue: question_8,\n            type: QuestionTypes.radio,\n            rules: yup.string().oneOf(question_8, required_field).typeError(required_field)\n        },\n    ],\n    answers: [],\n};\n\nconst QuestionSlice = createSlice({\n    name: \"question\",\n    initialState,\n    reducers: {},\n});\nconst questionReducer = QuestionSlice.reducer;\nexport { questionReducer };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}