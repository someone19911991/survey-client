{"ast":null,"code":"import React from\"react\";import{questions}from\"../../consts\";import{Wrapper,Answer,Question}from\"./AnsweredQuestions.styled\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AnsweredQuestions=function AnsweredQuestions(_ref){var answeredQuestions=_ref.answeredQuestions;var answersAndQuestions=questions.map(function(q){var answer=answeredQuestions[q.fieldName];if(!answer){var _q$multiple;answer=(_q$multiple=q.multiple)===null||_q$multiple===void 0?void 0:_q$multiple.map(function(item){return answeredQuestions[item.fieldName];}).join(\", \");}return{question:q.question,answer:answer};});return/*#__PURE__*/_jsx(\"div\",{children:answersAndQuestions.map(function(item){return/*#__PURE__*/_jsxs(Wrapper,{children:[/*#__PURE__*/_jsx(Question,{children:item.question}),/*#__PURE__*/_jsx(Answer,{children:item.answer})]},item.question);})});};export default AnsweredQuestions;","map":{"version":3,"names":["React","questions","Wrapper","Answer","Question","AnsweredQuestions","answeredQuestions","answersAndQuestions","map","q","answer","fieldName","multiple","item","join","question"],"sources":["C:/Users/Garik/Desktop/task2/client/src/components/AnsweredQuestions/AnsweredQuestions.tsx"],"sourcesContent":["import React, { FC } from \"react\";\nimport { ISurvey } from \"../../types\";\nimport { questions } from \"../../consts\";\nimport {Wrapper, Answer, Question} from \"./AnsweredQuestions.styled\";\n\ninterface IAnsweredQuestionsProps {\n    answeredQuestions: ISurvey;\n}\n\nconst AnsweredQuestions: FC<IAnsweredQuestionsProps> = ({\n    answeredQuestions,\n}) => {\n    const answersAndQuestions = questions.map((q) => {\n        let answer =\n            answeredQuestions[q.fieldName as keyof typeof answeredQuestions];\n        if (!answer) {\n            answer = q.multiple\n                ?.map(\n                    (item) => {\n                        return answeredQuestions[item.fieldName as keyof typeof answeredQuestions]\n                    }\n                )\n                .join(\", \") as string;\n        }\n        return { question: q.question, answer };\n    });\n    return (\n        <div>\n            {answersAndQuestions.map((item) => (\n                <Wrapper\n                    key={item.question}\n                >\n                    <Question>{item.question}</Question>\n                    <Answer>{item.answer}</Answer>\n                </Wrapper>\n            ))}\n        </div>\n    );\n};\n\nexport default AnsweredQuestions;\n"],"mappings":"AAAA,MAAOA,MAAK,KAAc,OAAO,CAEjC,OAASC,SAAS,KAAQ,cAAc,CACxC,OAAQC,OAAO,CAAEC,MAAM,CAAEC,QAAQ,KAAO,4BAA4B,CAAC,wFAMrE,GAAMC,kBAA8C,CAAG,QAAjDA,kBAA8C,MAE9C,IADFC,kBAAiB,MAAjBA,iBAAiB,CAEjB,GAAMC,oBAAmB,CAAGN,SAAS,CAACO,GAAG,CAAC,SAACC,CAAC,CAAK,CAC7C,GAAIC,OAAM,CACNJ,iBAAiB,CAACG,CAAC,CAACE,SAAS,CAAmC,CACpE,GAAI,CAACD,MAAM,CAAE,iBACTA,MAAM,cAAGD,CAAC,CAACG,QAAQ,sCAAV,YACHJ,GAAG,CACD,SAACK,IAAI,CAAK,CACN,MAAOP,kBAAiB,CAACO,IAAI,CAACF,SAAS,CAAmC,CAC9E,CAAC,CACJ,CACAG,IAAI,CAAC,IAAI,CAAW,CAC7B,CACA,MAAO,CAAEC,QAAQ,CAAEN,CAAC,CAACM,QAAQ,CAAEL,MAAM,CAANA,MAAO,CAAC,CAC3C,CAAC,CAAC,CACF,mBACI,qBACKH,mBAAmB,CAACC,GAAG,CAAC,SAACK,IAAI,qBAC1B,MAAC,OAAO,yBAGJ,KAAC,QAAQ,WAAEA,IAAI,CAACE,QAAQ,EAAY,cACpC,KAAC,MAAM,WAAEF,IAAI,CAACH,MAAM,EAAU,GAHzBG,IAAI,CAACE,QAAQ,CAIZ,EACb,CAAC,EACA,CAEd,CAAC,CAED,cAAeV,kBAAiB"},"metadata":{},"sourceType":"module"}