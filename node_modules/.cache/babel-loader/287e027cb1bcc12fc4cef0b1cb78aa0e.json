{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Garik\\\\Desktop\\\\task2\\\\client\\\\src\\\\components\\\\Survey\\\\Survey.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport * as yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Survey = () => {\n  _s();\n  const validationSchema = yup.object().shape({\n    fullname: yup.string().required('Fullname is required'),\n    username: yup.string().required('Username is required').min(6, 'Username must be at least 6 characters').max(20, 'Username must not exceed 20 characters'),\n    email: yup.string().required('Email is required').email('Email is invalid'),\n    password: yup.string().required('Password is required').min(6, 'Password must be at least 6 characters').max(40, 'Password must not exceed 40 characters'),\n    confirmPassword: yup.string().required('Confirm Password is required').oneOf([yup.ref('password'), null], 'Confirm Password does not match'),\n    acceptTerms: yup.bool().oneOf([true], 'Accept Terms is required')\n  });\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(validationSchema)\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(Survey, \"etQuphd8iAFR2Cjg/LHHyc51xOM=\", false, function () {\n  return [useForm];\n});\n_c = Survey;\nexport default Survey;\nvar _c;\n$RefreshReg$(_c, \"Survey\");","map":{"version":3,"names":["React","yup","useForm","Survey","validationSchema","object","shape","fullname","string","required","username","min","max","email","password","confirmPassword","oneOf","ref","acceptTerms","bool","register","handleSubmit","reset","formState","errors","resolver","yupResolver"],"sources":["C:/Users/Garik/Desktop/task2/client/src/components/Survey/Survey.tsx"],"sourcesContent":["import React from 'react';\nimport * as yup from \"yup\";\nimport {useForm} from \"react-hook-form\";\n\nconst Survey = () => {\n    const validationSchema = yup.object().shape({\n        fullname: yup.string().required('Fullname is required'),\n        username: yup.string()\n            .required('Username is required')\n            .min(6, 'Username must be at least 6 characters')\n            .max(20, 'Username must not exceed 20 characters'),\n        email: yup.string()\n            .required('Email is required')\n            .email('Email is invalid'),\n        password: yup.string()\n            .required('Password is required')\n            .min(6, 'Password must be at least 6 characters')\n            .max(40, 'Password must not exceed 40 characters'),\n        confirmPassword: yup.string()\n            .required('Confirm Password is required')\n            .oneOf([yup.ref('password'), null], 'Confirm Password does not match'),\n        acceptTerms: yup.bool().oneOf([true], 'Accept Terms is required')\n    });\n\n    const {\n        register,\n        handleSubmit,\n        reset,\n        formState: { errors }\n    } = useForm<UserS>({\n        resolver: yupResolver(validationSchema)\n    });\n\n    return (\n        <div>\n\n        </div>\n    );\n};\n\nexport default Survey;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,SAAQC,OAAO,QAAO,iBAAiB;AAAC;AAExC,MAAMC,MAAM,GAAG,MAAM;EAAA;EACjB,MAAMC,gBAAgB,GAAGH,GAAG,CAACI,MAAM,EAAE,CAACC,KAAK,CAAC;IACxCC,QAAQ,EAAEN,GAAG,CAACO,MAAM,EAAE,CAACC,QAAQ,CAAC,sBAAsB,CAAC;IACvDC,QAAQ,EAAET,GAAG,CAACO,MAAM,EAAE,CACjBC,QAAQ,CAAC,sBAAsB,CAAC,CAChCE,GAAG,CAAC,CAAC,EAAE,wCAAwC,CAAC,CAChDC,GAAG,CAAC,EAAE,EAAE,wCAAwC,CAAC;IACtDC,KAAK,EAAEZ,GAAG,CAACO,MAAM,EAAE,CACdC,QAAQ,CAAC,mBAAmB,CAAC,CAC7BI,KAAK,CAAC,kBAAkB,CAAC;IAC9BC,QAAQ,EAAEb,GAAG,CAACO,MAAM,EAAE,CACjBC,QAAQ,CAAC,sBAAsB,CAAC,CAChCE,GAAG,CAAC,CAAC,EAAE,wCAAwC,CAAC,CAChDC,GAAG,CAAC,EAAE,EAAE,wCAAwC,CAAC;IACtDG,eAAe,EAAEd,GAAG,CAACO,MAAM,EAAE,CACxBC,QAAQ,CAAC,8BAA8B,CAAC,CACxCO,KAAK,CAAC,CAACf,GAAG,CAACgB,GAAG,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,EAAE,iCAAiC,CAAC;IAC1EC,WAAW,EAAEjB,GAAG,CAACkB,IAAI,EAAE,CAACH,KAAK,CAAC,CAAC,IAAI,CAAC,EAAE,0BAA0B;EACpE,CAAC,CAAC;EAEF,MAAM;IACFI,QAAQ;IACRC,YAAY;IACZC,KAAK;IACLC,SAAS,EAAE;MAAEC;IAAO;EACxB,CAAC,GAAGtB,OAAO,CAAQ;IACfuB,QAAQ,EAAEC,WAAW,CAACtB,gBAAgB;EAC1C,CAAC,CAAC;EAEF,oBACI;IAAA;IAAA;IAAA;EAAA,QAEM;AAEd,CAAC;AAAC,GAlCID,MAAM;EAAA,QAyBJD,OAAO;AAAA;AAAA,KAzBTC,MAAM;AAoCZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module"}