{"ast":null,"code":"export const addUpdateQuestion = (answer, question, survey) => {\n  console.log({\n    answer,\n    question\n  });\n  if (Array.isArray(question) && Array.isArray(answer)) {\n    question.forEach((questionItem, questionIndex) => {\n      if (survey[questionItem]) {\n        survey[questionItem] = answer[questionIndex];\n      }\n    });\n  } else {\n    survey[question] = survey[answer];\n  }\n  console.log(survey);\n  return survey;\n};","map":{"version":3,"names":["addUpdateQuestion","answer","question","survey","console","log","Array","isArray","forEach","questionItem","questionIndex"],"sources":["C:/Users/Garik/Desktop/task2/client/src/utils/index.ts"],"sourcesContent":["import { ISurvey } from \"../components/Survey/Survey\";\n\n\nexport const addUpdateQuestion = (\n    answer: string | string[],\n    question: string | string[],\n    survey: ISurvey\n) => {\n    console.log({answer, question});\n    if (Array.isArray(question) && Array.isArray(answer)) {\n        question.forEach((questionItem, questionIndex) => {\n            if(survey[questionItem as keyof typeof survey]){\n                survey[questionItem as keyof typeof survey] = answer[questionIndex];\n            }\n        })\n    }else{\n        survey[question as keyof typeof survey] = survey[answer as string];\n    }\n    console.log(survey);\n    return survey;\n};\n"],"mappings":"AAGA,OAAO,MAAMA,iBAAiB,GAAG,CAC7BC,MAAyB,EACzBC,QAA2B,EAC3BC,MAAe,KACd;EACDC,OAAO,CAACC,GAAG,CAAC;IAACJ,MAAM;IAAEC;EAAQ,CAAC,CAAC;EAC/B,IAAII,KAAK,CAACC,OAAO,CAACL,QAAQ,CAAC,IAAII,KAAK,CAACC,OAAO,CAACN,MAAM,CAAC,EAAE;IAClDC,QAAQ,CAACM,OAAO,CAAC,CAACC,YAAY,EAAEC,aAAa,KAAK;MAC9C,IAAGP,MAAM,CAACM,YAAY,CAAwB,EAAC;QAC3CN,MAAM,CAACM,YAAY,CAAwB,GAAGR,MAAM,CAACS,aAAa,CAAC;MACvE;IACJ,CAAC,CAAC;EACN,CAAC,MAAI;IACDP,MAAM,CAACD,QAAQ,CAAwB,GAAGC,MAAM,CAACF,MAAM,CAAW;EACtE;EACAG,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EACnB,OAAOA,MAAM;AACjB,CAAC"},"metadata":{},"sourceType":"module"}