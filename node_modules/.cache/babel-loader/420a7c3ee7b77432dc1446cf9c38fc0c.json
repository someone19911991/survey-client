{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Garik\\\\Desktop\\\\task2\\\\client\\\\src\\\\components\\\\AnsweredQuestions\\\\AnsweredQuestions.tsx\";\nimport React from \"react\";\nimport { questions } from \"../../consts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnsweredQuestions = _ref => {\n  let {\n    answeredQuestions\n  } = _ref;\n  console.log(answeredQuestions);\n  const answersAndQuestions = questions.map(q => {\n    let answer = answeredQuestions[q.fieldName];\n    if (!answer) {\n      var _q$multiple;\n      // q.multiple?.reduce((acc, item) => answeredQuestions[item.fieldName as keyof typeof answeredQuestions], '')\n      (_q$multiple = q.multiple) === null || _q$multiple === void 0 ? void 0 : _q$multiple.map(item => {\n        console.log(item.fieldName);\n        return answeredQuestions[item.fieldName];\n      }).join(\", \");\n    }\n    console.log({\n      question: q.question,\n      answer\n    });\n    return {\n      question: q.question,\n      answer\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: answersAndQuestions.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        outline: \"1px solid teal\",\n        margin: \"15px 0\",\n        padding: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          margin: \"10px 0\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: item.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: item.answer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)]\n    }, item.question, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_c = AnsweredQuestions;\nexport default AnsweredQuestions;\nvar _c;\n$RefreshReg$(_c, \"AnsweredQuestions\");","map":{"version":3,"names":["React","questions","AnsweredQuestions","answeredQuestions","console","log","answersAndQuestions","map","q","answer","fieldName","multiple","item","join","question","outline","margin","padding"],"sources":["C:/Users/Garik/Desktop/task2/client/src/components/AnsweredQuestions/AnsweredQuestions.tsx"],"sourcesContent":["import React, { FC } from \"react\";\nimport { ISurvey } from \"../../types\";\nimport { questions } from \"../../consts\";\n\ninterface IAnsweredQuestionsProps {\n    answeredQuestions: ISurvey;\n}\nconst AnsweredQuestions: FC<IAnsweredQuestionsProps> = ({\n    answeredQuestions,\n}) => {\n    console.log(answeredQuestions);\n    const answersAndQuestions = questions.map((q) => {\n        let answer =\n            answeredQuestions[q.fieldName as keyof typeof answeredQuestions];\n        if (!answer) {\n            // q.multiple?.reduce((acc, item) => answeredQuestions[item.fieldName as keyof typeof answeredQuestions], '')\n            q.multiple\n                ?.map(\n                    (item) => {\n                        console.log(item.fieldName);\n                        return answeredQuestions[item.fieldName as keyof typeof answeredQuestions]\n                    }\n                )\n                .join(\", \");\n        }\n        console.log({ question: q.question, answer });\n        return { question: q.question, answer };\n    });\n    return (\n        <div>\n            {answersAndQuestions.map((item) => (\n                <div\n                    key={item.question}\n                    style={{\n                        outline: \"1px solid teal\",\n                        margin: \"15px 0\",\n                        padding: \"10px\",\n                    }}\n                >\n                    <p style={{ margin: \"10px 0\" }}>\n                        <b>{item.question}</b>\n                    </p>\n                    <p>{item.answer}</p>\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default AnsweredQuestions;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAc,OAAO;AAEjC,SAASC,SAAS,QAAQ,cAAc;AAAC;AAKzC,MAAMC,iBAA8C,GAAG,QAEjD;EAAA,IAFkD;IACpDC;EACJ,CAAC;EACGC,OAAO,CAACC,GAAG,CAACF,iBAAiB,CAAC;EAC9B,MAAMG,mBAAmB,GAAGL,SAAS,CAACM,GAAG,CAAEC,CAAC,IAAK;IAC7C,IAAIC,MAAM,GACNN,iBAAiB,CAACK,CAAC,CAACE,SAAS,CAAmC;IACpE,IAAI,CAACD,MAAM,EAAE;MAAA;MACT;MACA,eAAAD,CAAC,CAACG,QAAQ,gDAAV,YACMJ,GAAG,CACAK,IAAI,IAAK;QACNR,OAAO,CAACC,GAAG,CAACO,IAAI,CAACF,SAAS,CAAC;QAC3B,OAAOP,iBAAiB,CAACS,IAAI,CAACF,SAAS,CAAmC;MAC9E,CAAC,CACJ,CACAG,IAAI,CAAC,IAAI,CAAC;IACnB;IACAT,OAAO,CAACC,GAAG,CAAC;MAAES,QAAQ,EAAEN,CAAC,CAACM,QAAQ;MAAEL;IAAO,CAAC,CAAC;IAC7C,OAAO;MAAEK,QAAQ,EAAEN,CAAC,CAACM,QAAQ;MAAEL;IAAO,CAAC;EAC3C,CAAC,CAAC;EACF,oBACI;IAAA,UACKH,mBAAmB,CAACC,GAAG,CAAEK,IAAI,iBAC1B;MAEI,KAAK,EAAE;QACHG,OAAO,EAAE,gBAAgB;QACzBC,MAAM,EAAE,QAAQ;QAChBC,OAAO,EAAE;MACb,CAAE;MAAA,wBAEF;QAAG,KAAK,EAAE;UAAED,MAAM,EAAE;QAAS,CAAE;QAAA,uBAC3B;UAAA,UAAIJ,IAAI,CAACE;QAAQ;UAAA;UAAA;UAAA;QAAA;MAAK;QAAA;QAAA;QAAA;MAAA,QACtB,eACJ;QAAA,UAAIF,IAAI,CAACH;MAAM;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA,GAVfG,IAAI,CAACE,QAAQ;MAAA;MAAA;MAAA;IAAA,QAYzB;EAAC;IAAA;IAAA;IAAA;EAAA,QACA;AAEd,CAAC;AAAC,KAxCIZ,iBAA8C;AA0CpD,eAAeA,iBAAiB;AAAC;AAAA"},"metadata":{},"sourceType":"module"}