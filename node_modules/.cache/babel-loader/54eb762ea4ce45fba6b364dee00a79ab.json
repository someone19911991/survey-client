{"ast":null,"code":"import * as yup from \"yup\";\nimport { questions } from \"../consts\";\nexport const useQuestion = questionIndex => {\n  const question = questions[questionIndex];\n  let fieldName = question.fieldName;\n  let validationSchema = yup.object().shape({\n    [fieldName]: question.rules\n  });\n  if (!fieldName && question.multiple) {\n    const rulesToAdd = {};\n    question.multiple.map(q => {\n      rulesToAdd[q.fieldName] = q.rules;\n    });\n    validationSchema = yup.object().shape({\n      ...rulesToAdd\n    });\n  }\n  return {\n    questions,\n    question,\n    fieldName,\n    validationSchema\n  };\n};","map":{"version":3,"names":["yup","questions","useQuestion","questionIndex","question","fieldName","validationSchema","object","shape","rules","multiple","rulesToAdd","map","q"],"sources":["C:/Users/Garik/Desktop/task2/client/src/hooks/index.ts"],"sourcesContent":["import * as yup from \"yup\";\nimport {questions} from \"../consts\";\n\nexport const useQuestion = (questionIndex: number) => {\n    const question = questions[questionIndex];\n    let fieldName = question.fieldName;\n    let validationSchema = yup.object().shape({\n        [fieldName]: question.rules,\n    });\n    if (!fieldName && question.multiple) {\n        const rulesToAdd: { [key: string]: any } = {};\n        question.multiple.map((q) => {\n            rulesToAdd[q.fieldName] = q.rules;\n        });\n        validationSchema = yup.object().shape({ ...rulesToAdd });\n    }\n\n    return { questions, question, fieldName, validationSchema };\n};\n"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,KAAK;AAC1B,SAAQC,SAAS,QAAO,WAAW;AAEnC,OAAO,MAAMC,WAAW,GAAIC,aAAqB,IAAK;EAClD,MAAMC,QAAQ,GAAGH,SAAS,CAACE,aAAa,CAAC;EACzC,IAAIE,SAAS,GAAGD,QAAQ,CAACC,SAAS;EAClC,IAAIC,gBAAgB,GAAGN,GAAG,CAACO,MAAM,EAAE,CAACC,KAAK,CAAC;IACtC,CAACH,SAAS,GAAGD,QAAQ,CAACK;EAC1B,CAAC,CAAC;EACF,IAAI,CAACJ,SAAS,IAAID,QAAQ,CAACM,QAAQ,EAAE;IACjC,MAAMC,UAAkC,GAAG,CAAC,CAAC;IAC7CP,QAAQ,CAACM,QAAQ,CAACE,GAAG,CAAEC,CAAC,IAAK;MACzBF,UAAU,CAACE,CAAC,CAACR,SAAS,CAAC,GAAGQ,CAAC,CAACJ,KAAK;IACrC,CAAC,CAAC;IACFH,gBAAgB,GAAGN,GAAG,CAACO,MAAM,EAAE,CAACC,KAAK,CAAC;MAAE,GAAGG;IAAW,CAAC,CAAC;EAC5D;EAEA,OAAO;IAAEV,SAAS;IAAEG,QAAQ;IAAEC,SAAS;IAAEC;EAAiB,CAAC;AAC/D,CAAC"},"metadata":{},"sourceType":"module"}