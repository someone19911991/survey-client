{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Garik\\\\Desktop\\\\task2\\\\client\\\\src\\\\components\\\\Survey\\\\Survey.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useAppSelector } from \"../../hooks/redux\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { QuestionTypes } from \"../../store/types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nconst Survey = () => {\n  _s();\n  var _errors$questionLabel;\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const {\n    questions\n  } = useAppSelector(state => state.questionReducer);\n  const question = questions[questionIndex];\n  const questionLabel = question.inputLabel;\n  const validationSchema = yup.object().shape({\n    [!Array.isArray(questionLabel) ? questionLabel : 'personal_info']: question.rules\n  });\n  const {\n    register,\n    formState: {\n      errors\n    },\n    handleSubmit\n  } = useForm({\n    resolver: yupResolver(validationSchema)\n  });\n  const onSubmit = data => {\n    console.log(data);\n    setQuestionIndex(prev => ++prev);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      outline: \"1px solid green\",\n      margin: \"10px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: question.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [question.type === QuestionTypes.textInput && /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          ...register(questionLabel)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this), question.type === QuestionTypes.numberInput && /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          ...register(questionLabel)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this), question.type === QuestionTypes.date && /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          ...register(questionLabel)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this), question.type === QuestionTypes.select && /*#__PURE__*/_jsxDEV(\"select\", {\n          ...register(questionLabel),\n          children: Array.isArray(question.currentValue) && question.currentValue.map(opt => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: opt,\n            children: opt\n          }, opt, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this), question.type === QuestionTypes.radio && Array.isArray(question.currentValue) && question.currentValue.map(opt => /*#__PURE__*/_createElement(\"input\", {\n          ...register(questionLabel),\n          key: opt,\n          type: \"radio\",\n          value: opt,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }\n        })), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"red\"\n          },\n          children: (_errors$questionLabel = errors[questionLabel]) === null || _errors$questionLabel === void 0 ? void 0 : _errors$questionLabel.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(Survey, \"+eI3OyLOcZdPH0+Mreu5WjhKIsY=\", false, function () {\n  return [useAppSelector, useForm];\n});\n_c = Survey;\nexport default Survey;\nvar _c;\n$RefreshReg$(_c, \"Survey\");","map":{"version":3,"names":["React","useState","useAppSelector","useForm","yupResolver","yup","QuestionTypes","Survey","questionIndex","setQuestionIndex","questions","state","questionReducer","question","questionLabel","inputLabel","validationSchema","object","shape","Array","isArray","rules","register","formState","errors","handleSubmit","resolver","onSubmit","data","console","log","prev","outline","margin","type","textInput","numberInput","date","select","currentValue","map","opt","radio","color","message"],"sources":["C:/Users/Garik/Desktop/task2/client/src/components/Survey/Survey.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useAppSelector } from \"../../hooks/redux\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { QuestionTypes } from \"../../store/types\";\n\nconst Survey = () => {\n    const [questionIndex, setQuestionIndex] = useState(0);\n    const { questions } = useAppSelector((state) => state.questionReducer);\n    const question = questions[questionIndex];\n    const questionLabel = question.inputLabel;\n    type FormTypes = { [questionLabel: string]: typeof question.currentValue };\n    const validationSchema = yup.object().shape({\n        [!Array.isArray(questionLabel) ? questionLabel : 'personal_info']: question.rules,\n    });\n    const {\n        register,\n        formState: { errors },\n        handleSubmit,\n    } = useForm<FormTypes>({ resolver: yupResolver(validationSchema) });\n\n    const onSubmit = (data: FormTypes) => {\n        console.log(data);\n        setQuestionIndex((prev) => ++prev);\n    };\n\n    return (\n        <div style={{ outline: \"1px solid green\", margin: \"10px\" }}>\n            <h3>{question.question}</h3>\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <div>\n                    {question.type === QuestionTypes.textInput && (\n                        <input type=\"text\" {...register(questionLabel)} />\n                    )}\n                    {question.type === QuestionTypes.numberInput && (\n                        <input type=\"number\" {...register(questionLabel)} />\n                    )}\n                    {question.type === QuestionTypes.date && (\n                        <input type=\"date\" {...register(questionLabel)} />\n                    )}\n                    {question.type === QuestionTypes.select && (\n                        <select {...register(questionLabel)}>\n                            {Array.isArray(question.currentValue) &&\n                                question.currentValue.map((opt) => (\n                                    <option key={opt} value={opt}>\n                                        {opt}\n                                    </option>\n                                ))}\n                        </select>\n                    )}\n                    {question.type === QuestionTypes.radio &&\n                        Array.isArray(question.currentValue) &&\n                        question.currentValue.map((opt) => (\n                            <input {...register(questionLabel)} key={opt} type=\"radio\" value={opt} />\n                        ))}\n                    <p style={{ color: \"red\" }}>\n                        {errors[questionLabel]?.message}\n                    </p>\n                </div>\n                <div>\n                    <button>Submit</button>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default Survey;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}