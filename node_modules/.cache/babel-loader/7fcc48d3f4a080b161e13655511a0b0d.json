{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/Garik/Desktop/task2/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _objectSpread from\"C:/Users/Garik/Desktop/task2/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _asyncToGenerator from\"C:/Users/Garik/Desktop/task2/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/Garik/Desktop/task2/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{Fragment,useEffect,useState}from\"react\";import{useForm}from\"react-hook-form\";import{yupResolver}from\"@hookform/resolvers/yup\";import{QuestionTypes}from\"../../types/index\";import Input from\"../UI/Input/Input\";import{useQuestion}from\"../../hooks\";import Select from\"../UI/Select/Select\";import{QuestionTitle,SButton,Wrapper,ErrorMsg,Error,ErrCloseBtn,ErrorWrapper}from\"./Survey.styled\";import Modal from\"../UI/Modal/Modal\";import{addUpdateQuestion,getLSQuestions,getModalTitle}from\"../../utils\";import AnsweredQuestions from\"../AnsweredQuestions/AnsweredQuestions\";import axios from\"axios\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Survey=function Survey(){var _question$multiple,_errors$fieldName;var _useState=useState(0),_useState2=_slicedToArray(_useState,2),questionIndex=_useState2[0],setQuestionIndex=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),answeredQuestions=_useState4[0],setAnsweredQuestions=_useState4[1];var _useState5=useState(\"pending\"),_useState6=_slicedToArray(_useState5,2),confirmSurvey=_useState6[0],setConfirmSurvey=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),modalOpen=_useState8[0],setModalOpen=_useState8[1];var _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),modalTitle=_useState10[0],setModalTitle=_useState10[1];var _useState11=useState(\"\"),_useState12=_slicedToArray(_useState11,2),error=_useState12[0],setError=_useState12[1];var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),finishSurvey=_useState14[0],setFinishSurvey=_useState14[1];var _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),loading=_useState16[0],setLoading=_useState16[1];var _useQuestion=useQuestion(questionIndex),question=_useQuestion.question,fieldName=_useQuestion.fieldName,validationSchema=_useQuestion.validationSchema,questions=_useQuestion.questions;var _useForm=useForm({resolver:yupResolver(validationSchema)}),register=_useForm.register,errors=_useForm.formState.errors,handleSubmit=_useForm.handleSubmit,setValue=_useForm.setValue;var onSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(data){var answerToPass,questionLabel,_questions$questionIn,_questions$questionIn2,survey,parsedSurvey,_updatedSurvey,updatedSurvey;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:answerToPass=data[questions[questionIndex].fieldName];questionLabel=questions[questionIndex].fieldName;if(!answerToPass&&!questionLabel){questionLabel=(_questions$questionIn=questions[questionIndex])===null||_questions$questionIn===void 0?void 0:(_questions$questionIn2=_questions$questionIn.multiple)===null||_questions$questionIn2===void 0?void 0:_questions$questionIn2.map(function(item){return item.fieldName;});answerToPass=questionLabel.map(function(item){return data[item];});}survey=localStorage.getItem(\"survey\");if(survey){parsedSurvey=JSON.parse(survey);_updatedSurvey=addUpdateQuestion(answerToPass,questionLabel,parsedSurvey);localStorage.setItem(\"survey\",JSON.stringify(_updatedSurvey));}updatedSurvey=addUpdateQuestion(answerToPass,questionLabel,_objectSpread({},answeredQuestions));setAnsweredQuestions(updatedSurvey);if(questionIndex<questions.length-1){setQuestionIndex(function(prev){return++prev;});}else{setModalOpen(true);setConfirmSurvey(\"pending\");setFinishSurvey(true);setModalTitle(\"Are you sure you want to commit your answers?\");}case 8:case\"end\":return _context.stop();}}},_callee);}));return function onSubmit(_x){return _ref.apply(this,arguments);};}();var onPrev=function onPrev(e){e.preventDefault();setQuestionIndex(function(prev){return--prev;});};useEffect(function(){var survey=localStorage.getItem(\"survey\");if(confirmSurvey===\"confirmed\"){if(survey){var _getLSQuestions=getLSQuestions(survey),lsAnsweredQuestions=_getLSQuestions.lsAnsweredQuestions,qIndex=_getLSQuestions.qIndex,answeredQuestionsEntries=_getLSQuestions.answeredQuestionsEntries;setAnsweredQuestions(lsAnsweredQuestions);answeredQuestionsEntries.forEach(function(item){setValue(item[0],item[1]);});setQuestionIndex(qIndex);}else{localStorage.setItem(\"survey\",JSON.stringify({}));}}else if(confirmSurvey===\"rejected\"){localStorage.removeItem(\"survey\");}},[confirmSurvey,setValue]);useEffect(function(){var _getModalTitle=getModalTitle(),_modalTitle=_getModalTitle._modalTitle,openModal=_getModalTitle.openModal;setModalOpen(openModal);setModalTitle(_modalTitle);},[]);var onFinishSurvey=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var _error;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;setLoading(true);_context2.next=4;return axios.post(\"https://survey-test-task.herokuapp.com/api/survey\",answeredQuestions);case 4:setModalOpen(false);setConfirmSurvey(\"confirmed\");setAnsweredQuestions({});localStorage.removeItem(\"survey\");setLoading(false);_context2.next=16;break;case 11:_context2.prev=11;_context2.t0=_context2[\"catch\"](0);setModalOpen(false);_error=_context2.t0;setError(_error.message);case 16:case\"end\":return _context2.stop();}}},_callee2,null,[[0,11]]);}));return function onFinishSurvey(){return _ref2.apply(this,arguments);};}();var onHandleError=function onHandleError(){localStorage.removeItem('survey');window.location.reload();};return/*#__PURE__*/_jsxs(_Fragment,{children:[error&&/*#__PURE__*/_jsxs(ErrorWrapper,{children:[/*#__PURE__*/_jsx(Error,{children:error}),/*#__PURE__*/_jsx(ErrCloseBtn,{onClick:onHandleError,children:\"x\"})]}),confirmSurvey===\"confirmed\"&&finishSurvey&&/*#__PURE__*/_jsx(Wrapper,{children:/*#__PURE__*/_jsx(\"h1\",{style:{color:\"var(--white)\"},children:\"You have successfully completed your survey!\"})}),confirmSurvey===\"pending\"&&modalOpen&&!finishSurvey&&/*#__PURE__*/_jsx(Modal,{modalTitle:modalTitle,onCancel:function onCancel(){setModalOpen(false);setConfirmSurvey(\"rejected\");},onConfirm:function onConfirm(){setModalOpen(false);setConfirmSurvey(\"confirmed\");}}),modalOpen&&finishSurvey&&/*#__PURE__*/_jsx(Modal,{loading:loading,modalTitle:modalTitle,onCancel:function onCancel(){setModalOpen(false);setFinishSurvey(false);},onConfirm:onFinishSurvey,children:/*#__PURE__*/_jsx(AnsweredQuestions,{answeredQuestions:answeredQuestions})}),!modalOpen&&!finishSurvey&&/*#__PURE__*/_jsxs(Wrapper,{children:[/*#__PURE__*/_jsxs(\"h1\",{style:{marginBottom:\"50px\"},children:[\"Question \",questionIndex+1,\"/\",questions.length]}),/*#__PURE__*/_jsx(QuestionTitle,{children:question.question}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit(onSubmit),children:[question.type===QuestionTypes.textInput&&/*#__PURE__*/_jsx(Input,_objectSpread({type:\"text\"},register(fieldName))),question.type===QuestionTypes.numberInput&&/*#__PURE__*/_jsx(Input,_objectSpread({type:\"number\"},register(fieldName))),question.type===QuestionTypes.date&&/*#__PURE__*/_jsx(Input,_objectSpread({type:\"date\"},register(fieldName))),question.type===QuestionTypes.select&&/*#__PURE__*/_jsx(Select,_objectSpread({items:Array.isArray(question.currentValue)?question.currentValue:[]},register(fieldName))),question.type===QuestionTypes.radio&&Array.isArray(question.currentValue)&&question.currentValue.map(function(opt){return/*#__PURE__*/_jsx(Input,_objectSpread({type:\"radio\",label:opt,value:opt},register(fieldName)),opt);}),question.type===QuestionTypes.multiple&&(question===null||question===void 0?void 0:(_question$multiple=question.multiple)===null||_question$multiple===void 0?void 0:_question$multiple.map(function(q){var _errors$q$fieldName;return/*#__PURE__*/_jsxs(Fragment,{children:[q.type===QuestionTypes.email&&/*#__PURE__*/_jsx(Input,_objectSpread({label:q.inputLabel,type:\"email\"},register(q.fieldName))),q.type===QuestionTypes.textInput&&/*#__PURE__*/_jsx(Input,_objectSpread({label:q.inputLabel},register(q.fieldName))),/*#__PURE__*/_jsx(\"p\",{style:{color:\"red\"},children:(_errors$q$fieldName=errors[q.fieldName])===null||_errors$q$fieldName===void 0?void 0:_errors$q$fieldName.message})]},q.inputLabel);})),/*#__PURE__*/_jsx(ErrorMsg,{children:(_errors$fieldName=errors[fieldName])===null||_errors$fieldName===void 0?void 0:_errors$fieldName.message}),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",justifyContent:\"space-between\"},children:[questionIndex!==0&&/*#__PURE__*/_jsx(SButton,{style:{backgroundColor:\"#ffc827\"},onClick:onPrev,children:\"Prev\"}),questionIndex<=questions.length-1&&/*#__PURE__*/_jsx(SButton,{children:questionIndex<questions.length-1?\"Next\":\"Submit\"})]})]})]})]});};export default Survey;","map":{"version":3,"names":["React","Fragment","useEffect","useState","useForm","yupResolver","QuestionTypes","Input","useQuestion","Select","QuestionTitle","SButton","Wrapper","ErrorMsg","Error","ErrCloseBtn","ErrorWrapper","Modal","addUpdateQuestion","getLSQuestions","getModalTitle","AnsweredQuestions","axios","Survey","questionIndex","setQuestionIndex","answeredQuestions","setAnsweredQuestions","confirmSurvey","setConfirmSurvey","modalOpen","setModalOpen","modalTitle","setModalTitle","error","setError","finishSurvey","setFinishSurvey","loading","setLoading","question","fieldName","validationSchema","questions","resolver","register","errors","formState","handleSubmit","setValue","onSubmit","data","answerToPass","questionLabel","multiple","map","item","survey","localStorage","getItem","parsedSurvey","JSON","parse","updatedSurvey","setItem","stringify","length","prev","onPrev","e","preventDefault","lsAnsweredQuestions","qIndex","answeredQuestionsEntries","forEach","removeItem","_modalTitle","openModal","onFinishSurvey","post","message","onHandleError","window","location","reload","color","marginBottom","type","textInput","numberInput","date","select","Array","isArray","currentValue","radio","opt","q","email","inputLabel","display","justifyContent","backgroundColor"],"sources":["C:/Users/Garik/Desktop/task2/client/src/components/Survey/Survey.tsx"],"sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { QuestionTypes, ISurvey, ErrorType } from \"../../types/index\";\nimport Input from \"../UI/Input/Input\";\nimport { useQuestion } from \"../../hooks\";\nimport Select from \"../UI/Select/Select\";\nimport {\n    QuestionTitle,\n    SButton,\n    Wrapper,\n    ErrorMsg,\n    Error,\n    ErrCloseBtn,\n    ErrorWrapper\n} from \"./Survey.styled\";\nimport Modal from \"../UI/Modal/Modal\";\nimport { addUpdateQuestion, getLSQuestions, getModalTitle } from \"../../utils\";\nimport AnsweredQuestions from \"../AnsweredQuestions/AnsweredQuestions\";\nimport axios from \"axios\";\n\nconst Survey = () => {\n    const [questionIndex, setQuestionIndex] = useState(0);\n    const [answeredQuestions, setAnsweredQuestions] = useState<ISurvey>({});\n    const [confirmSurvey, setConfirmSurvey] = useState<string>(\"pending\");\n    const [modalOpen, setModalOpen] = useState<boolean>(false);\n    const [modalTitle, setModalTitle] = useState<string>(\"\");\n    const [error, setError] = useState<string>(\"\");\n    const [finishSurvey, setFinishSurvey] = useState<boolean>(false);\n    const [loading, setLoading] = useState<boolean>(false);\n\n    const { question, fieldName, validationSchema, questions } =\n        useQuestion(questionIndex);\n\n    type FormTypes = {\n        [fieldName: string]: typeof question.currentValue | string;\n    };\n\n    const {\n        register,\n        formState: { errors },\n        handleSubmit,\n        setValue,\n    } = useForm<FormTypes>({ resolver: yupResolver(validationSchema) });\n\n    const onSubmit = async (data: FormTypes) => {\n        let answerToPass = data[questions[questionIndex].fieldName] as\n            | string\n            | string[];\n        let questionLabel = questions[questionIndex].fieldName as\n            | string\n            | string[];\n        if (!answerToPass && !questionLabel) {\n            questionLabel = questions[questionIndex]?.multiple?.map(\n                (item) => item.fieldName\n            ) as string[];\n            answerToPass = questionLabel.map((item) => data[item]) as string[];\n        }\n        let survey = localStorage.getItem(\"survey\");\n        if (survey) {\n            const parsedSurvey = JSON.parse(survey) as ISurvey;\n            const updatedSurvey = addUpdateQuestion(\n                answerToPass,\n                questionLabel,\n                parsedSurvey\n            );\n            localStorage.setItem(\"survey\", JSON.stringify(updatedSurvey));\n        }\n        const updatedSurvey = addUpdateQuestion(answerToPass, questionLabel, {\n            ...answeredQuestions,\n        });\n        setAnsweredQuestions(updatedSurvey);\n        if (questionIndex < questions.length - 1) {\n            setQuestionIndex((prev) => ++prev);\n        } else {\n            setModalOpen(true);\n            setConfirmSurvey(\"pending\");\n            setFinishSurvey(true);\n            setModalTitle(\"Are you sure you want to commit your answers?\");\n        }\n    };\n\n    const onPrev = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        e.preventDefault();\n        setQuestionIndex((prev) => --prev);\n    };\n\n    useEffect(() => {\n        const survey = localStorage.getItem(\"survey\");\n        if (confirmSurvey === \"confirmed\") {\n            if (survey) {\n                const {\n                    lsAnsweredQuestions,\n                    qIndex,\n                    answeredQuestionsEntries,\n                } = getLSQuestions(survey);\n                setAnsweredQuestions(lsAnsweredQuestions);\n                answeredQuestionsEntries.forEach((item) => {\n                    setValue(item[0], item[1]);\n                });\n                setQuestionIndex(qIndex);\n            } else {\n                localStorage.setItem(\"survey\", JSON.stringify({}));\n            }\n        } else if (confirmSurvey === \"rejected\") {\n            localStorage.removeItem(\"survey\");\n        }\n    }, [confirmSurvey, setValue]);\n\n    useEffect(() => {\n        const { _modalTitle, openModal } = getModalTitle();\n        setModalOpen(openModal);\n        setModalTitle(_modalTitle);\n    }, []);\n\n    const onFinishSurvey = async () => {\n        try {\n            setLoading(true);\n            await axios.post(\n                \"https://survey-test-task.herokuapp.com/api/survey\",\n                answeredQuestions\n            );\n            setModalOpen(false);\n            setConfirmSurvey(\"confirmed\");\n            setAnsweredQuestions({});\n            localStorage.removeItem(\"survey\");\n            setLoading(false);\n        } catch (err) {\n            setModalOpen(false);\n            const error = err as ErrorType;\n            setError(error.message);\n        }\n    };\n\n    const onHandleError = () => {\n        localStorage.removeItem('survey');\n        window.location.reload()\n    }\n\n    return (\n        <>\n            {error && (\n                <ErrorWrapper>\n                    <Error>{error}</Error>\n                    <ErrCloseBtn onClick={onHandleError}>\n                        x\n                    </ErrCloseBtn>\n                </ErrorWrapper>\n            )}\n            {confirmSurvey === \"confirmed\" && finishSurvey && (\n                <Wrapper>\n                    <h1 style={{color: \"var(--white)\"}}>You have successfully completed your survey!</h1>\n                </Wrapper>\n            )}\n            {confirmSurvey === \"pending\" &&\n                modalOpen &&\n                !finishSurvey &&\n                 (\n                    <Modal\n                        modalTitle={modalTitle}\n                        onCancel={() => {\n                            setModalOpen(false);\n                            setConfirmSurvey(\"rejected\");\n                        }}\n                        onConfirm={() => {\n                            setModalOpen(false);\n                            setConfirmSurvey(\"confirmed\");\n                        }}\n                    />\n                )}\n            {modalOpen && finishSurvey  && (\n                <Modal\n                    loading={loading}\n                    modalTitle={modalTitle}\n                    onCancel={() => {\n                        setModalOpen(false);\n                        setFinishSurvey(false);\n                    }}\n                    onConfirm={onFinishSurvey}\n                >\n                    <AnsweredQuestions answeredQuestions={answeredQuestions} />\n                </Modal>\n            )}\n            {!modalOpen && !finishSurvey && (\n                <Wrapper>\n                    <h1 style={{ marginBottom: \"50px\" }}>\n                        Question {questionIndex + 1}/{questions.length}\n                    </h1>\n                    <QuestionTitle>{question.question}</QuestionTitle>\n                    <form onSubmit={handleSubmit(onSubmit)}>\n                        {question.type === QuestionTypes.textInput && (\n                            <Input type=\"text\" {...register(fieldName)} />\n                        )}\n                        {question.type === QuestionTypes.numberInput && (\n                            <Input type=\"number\" {...register(fieldName)} />\n                        )}\n                        {question.type === QuestionTypes.date && (\n                            <Input type=\"date\" {...register(fieldName)} />\n                        )}\n                        {question.type === QuestionTypes.select && (\n                            <Select\n                                items={\n                                    Array.isArray(question.currentValue)\n                                        ? question.currentValue\n                                        : []\n                                }\n                                {...register(fieldName)}\n                            />\n                        )}\n                        {question.type === QuestionTypes.radio &&\n                            Array.isArray(question.currentValue) &&\n                            question.currentValue.map((opt) => (\n                                <Input\n                                    type=\"radio\"\n                                    label={opt}\n                                    key={opt}\n                                    value={opt}\n                                    {...register(fieldName)}\n                                />\n                            ))}\n                        {question.type === QuestionTypes.multiple &&\n                            question?.multiple?.map((q) => (\n                                <Fragment key={q.inputLabel}>\n                                    {q.type === QuestionTypes.email && (\n                                        <Input\n                                            label={q.inputLabel}\n                                            type=\"email\"\n                                            {...register(q.fieldName)}\n                                        />\n                                    )}\n                                    {q.type === QuestionTypes.textInput && (\n                                        <Input\n                                            label={q.inputLabel}\n                                            {...register(q.fieldName)}\n                                        />\n                                    )}\n                                    <p style={{ color: \"red\" }}>\n                                        {errors[q.fieldName]?.message}\n                                    </p>\n                                </Fragment>\n                            ))}\n                        <ErrorMsg>{errors[fieldName]?.message}</ErrorMsg>\n                        <div\n                            style={{\n                                display: \"flex\",\n                                justifyContent: \"space-between\",\n                            }}\n                        >\n                            {questionIndex !== 0 && (\n                                <SButton\n                                    style={{backgroundColor: \"#ffc827\"}}\n                                    onClick={onPrev}\n                                >\n                                    Prev\n                                </SButton>\n                            )}\n                            {questionIndex <= questions.length - 1 && (\n                                <SButton>\n                                    {questionIndex < questions.length - 1\n                                        ? \"Next\"\n                                        : \"Submit\"}\n                                </SButton>\n                            )}\n                        </div>\n                    </form>\n                </Wrapper>\n            )}\n        </>\n    );\n};\n\nexport default Survey;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}