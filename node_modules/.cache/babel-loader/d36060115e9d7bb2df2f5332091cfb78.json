{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Garik\\\\Desktop\\\\task2\\\\client\\\\src\\\\components\\\\Survey\\\\Survey.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport * as yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Survey = () => {\n  _s();\n  // const { questions } = useAppSelector((state) => state.questionReducer);\n  // const question = questions[0];\n  // const questionLabel = question.inputLabel;\n\n  // @ts-ignore\n  // const schema = yup.object().shape({ [questionLabel]: question.rules });\n  const schema = yup.object().shape({\n    question_1: yup.string().trim().required().min(1)\n  });\n\n  // console.log({schema});\n  const {\n    register,\n    watch,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  const onSubmit = data => console.log(data);\n  useEffect(() => {\n    const subscription = watch((value, _ref) => {\n      let {\n        name,\n        type\n      } = _ref;\n      return console.log(value, name, type);\n    });\n    return () => subscription.unsubscribe();\n  }, [watch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ...register('question_1')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(Survey, \"D0M2BjaWhlVtER6FS/iyNCQOBFI=\", false, function () {\n  return [useForm];\n});\n_c = Survey;\nexport default Survey;\nvar _c;\n$RefreshReg$(_c, \"Survey\");","map":{"version":3,"names":["React","useEffect","yup","useForm","yupResolver","Survey","schema","object","shape","question_1","string","trim","required","min","register","watch","handleSubmit","formState","errors","resolver","onSubmit","data","console","log","subscription","value","name","type","unsubscribe"],"sources":["C:/Users/Garik/Desktop/task2/client/src/components/Survey/Survey.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useAppSelector } from \"../../hooks/redux\";\nimport * as yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\n\nconst Survey = () => {\n    // const { questions } = useAppSelector((state) => state.questionReducer);\n    // const question = questions[0];\n    // const questionLabel = question.inputLabel;\n\n    // @ts-ignore\n    // const schema = yup.object().shape({ [questionLabel]: question.rules });\n    const schema = yup.object().shape({\n        question_1: yup.string().trim().required().min(1)\n    })\n\n    // console.log({schema});\n    const {\n        register,\n        watch,\n        handleSubmit,\n        formState: { errors },\n    } = useForm({ resolver: yupResolver(schema) });\n\n    const onSubmit = (data: any) => console.log(data);\n\n    useEffect(() => {\n        const subscription = watch((value, { name, type }) =>\n            console.log(value, name, type)\n        );\n        return () => subscription.unsubscribe();\n    }, [watch]);\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <input type=\"text\" {...register('question_1')}/>\n                <div>\n                    <button>Submit</button>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default Survey;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAExC,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,SAASC,OAAO,QAAQ,iBAAiB;AACzC,SAASC,WAAW,QAAQ,yBAAyB;AAAC;AAEtD,MAAMC,MAAM,GAAG,MAAM;EAAA;EACjB;EACA;EACA;;EAEA;EACA;EACA,MAAMC,MAAM,GAAGJ,GAAG,CAACK,MAAM,EAAE,CAACC,KAAK,CAAC;IAC9BC,UAAU,EAAEP,GAAG,CAACQ,MAAM,EAAE,CAACC,IAAI,EAAE,CAACC,QAAQ,EAAE,CAACC,GAAG,CAAC,CAAC;EACpD,CAAC,CAAC;;EAEF;EACA,MAAM;IACFC,QAAQ;IACRC,KAAK;IACLC,YAAY;IACZC,SAAS,EAAE;MAAEC;IAAO;EACxB,CAAC,GAAGf,OAAO,CAAC;IAAEgB,QAAQ,EAAEf,WAAW,CAACE,MAAM;EAAE,CAAC,CAAC;EAE9C,MAAMc,QAAQ,GAAIC,IAAS,IAAKC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EAEjDpB,SAAS,CAAC,MAAM;IACZ,MAAMuB,YAAY,GAAGT,KAAK,CAAC,CAACU,KAAK;MAAA,IAAE;QAAEC,IAAI;QAAEC;MAAK,CAAC;MAAA,OAC7CL,OAAO,CAACC,GAAG,CAACE,KAAK,EAAEC,IAAI,EAAEC,IAAI,CAAC;IAAA,EACjC;IACD,OAAO,MAAMH,YAAY,CAACI,WAAW,EAAE;EAC3C,CAAC,EAAE,CAACb,KAAK,CAAC,CAAC;EAEX,oBACI;IAAA,uBACI;MAAM,QAAQ,EAAEC,YAAY,CAACI,QAAQ,CAAE;MAAA,wBACnC;QAAO,IAAI,EAAC,MAAM;QAAA,GAAKN,QAAQ,CAAC,YAAY;MAAC;QAAA;QAAA;QAAA;MAAA,QAAG,eAChD;QAAA,uBACI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAuB;QAAA;QAAA;QAAA;MAAA,QACrB;IAAA;MAAA;MAAA;MAAA;IAAA;EACH;IAAA;IAAA;IAAA;EAAA,QACL;AAEd,CAAC;AAAC,GAtCIT,MAAM;EAAA,QAiBJF,OAAO;AAAA;AAAA,KAjBTE,MAAM;AAwCZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module"}