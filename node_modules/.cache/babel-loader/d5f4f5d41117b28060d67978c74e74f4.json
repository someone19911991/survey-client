{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Garik\\\\Desktop\\\\task2\\\\client\\\\src\\\\components\\\\Survey\\\\Survey.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useAppSelector } from \"../../hooks/redux\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { QuestionTypes } from \"../../store/types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Survey = () => {\n  _s();\n  var _errors$questionLabel;\n  let questionIndex = 0;\n  const {\n    questions\n  } = useAppSelector(state => state.questionReducer);\n  const question = questions[questionIndex];\n  const questionLabel = question.inputLabel;\n  const validationSchema = yup.object().shape({\n    [questionLabel]: question.rules\n  });\n  const {\n    register,\n    formState: {\n      errors\n    },\n    handleSubmit\n  } = useForm({\n    resolver: yupResolver(validationSchema)\n  });\n  const onSubmit = data => console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      outline: '1px solid green',\n      margin: '10px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: question.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [question.type === QuestionTypes.textInput && /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          ...register(questionLabel)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this), question.type === QuestionTypes.numberInput && /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          ...register(questionLabel)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this), question.type === QuestionTypes.select && /*#__PURE__*/_jsxDEV(\"select\", {\n          ...register(questionLabel),\n          children: Array.isArray(question.currentValue) && question.currentValue.map(opt => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: opt,\n            children: opt\n          }, opt, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this), question.type === QuestionTypes.radio && Array.isArray(question.currentValue) && question.currentValue.map(opt => /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: opt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 29\n        }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: (_errors$questionLabel = errors[questionLabel]) === null || _errors$questionLabel === void 0 ? void 0 : _errors$questionLabel.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(Survey, \"iUrULXQng/5ppUGC7cdJy4cqNsA=\", false, function () {\n  return [useAppSelector, useForm];\n});\n_c = Survey;\nexport default Survey;\nvar _c;\n$RefreshReg$(_c, \"Survey\");","map":{"version":3,"names":["React","useAppSelector","useForm","yupResolver","yup","QuestionTypes","Survey","questionIndex","questions","state","questionReducer","question","questionLabel","inputLabel","validationSchema","object","shape","rules","register","formState","errors","handleSubmit","resolver","onSubmit","data","console","log","outline","margin","type","textInput","numberInput","select","Array","isArray","currentValue","map","opt","radio","message"],"sources":["C:/Users/Garik/Desktop/task2/client/src/components/Survey/Survey.tsx"],"sourcesContent":["import React from \"react\";\nimport { useAppSelector } from \"../../hooks/redux\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { QuestionTypes } from \"../../store/types\";\n\nconst Survey = () => {\n    let questionIndex = 0;\n    const { questions } = useAppSelector((state) => state.questionReducer);\n    const question = questions[questionIndex];\n    const questionLabel = question.inputLabel;\n    type FormTypes = { [questionLabel: string]: typeof question.currentValue };\n    const validationSchema = yup.object().shape({\n        [questionLabel]: question.rules,\n    });\n    const {\n        register,\n        formState: { errors },\n        handleSubmit,\n    } = useForm<FormTypes>({ resolver: yupResolver(validationSchema) });\n\n    const onSubmit = (data: FormTypes) => console.log(data);\n\n    return (\n        <div style={{outline: '1px solid green', margin: '10px'}}>\n            <h3>{question.question}</h3>\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <div>\n                    {question.type === QuestionTypes.textInput && (\n                        <input type=\"text\" {...register(questionLabel)} />\n                    )}\n                    {question.type === QuestionTypes.numberInput && (\n                        <input type=\"number\" {...register(questionLabel)} />\n                    )}\n                    {question.type === QuestionTypes.select && (\n                        <select {...register(questionLabel)}>\n                            {Array.isArray(question.currentValue) &&\n                                question.currentValue.map((opt) => (\n                                    <option key={opt} value={opt}>\n                                        {opt}\n                                    </option>\n                                ))}\n                        </select>\n                    )}\n                    {question.type === QuestionTypes.radio &&\n                        Array.isArray(question.currentValue) &&\n                        question.currentValue.map((opt) => (\n                            <input type=\"radio\" value={opt}/>\n                        ))}\n                    <p>{errors[questionLabel]?.message}</p>\n                </div>\n                <div>\n                    <button>Submit</button>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default Survey;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}