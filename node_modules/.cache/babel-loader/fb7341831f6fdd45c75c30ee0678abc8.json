{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Garik\\\\Desktop\\\\task2\\\\client\\\\src\\\\components\\\\Survey\\\\Survey_.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport * as yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Survey_ = () => {\n  _s();\n  var _errors$fullname, _errors$username, _errors$email, _errors$password, _errors$confirmPasswo, _errors$acceptTerms;\n  const validationSchema = yup.object().shape({\n    fullname: yup.string().required('Fullname is required'),\n    username: yup.string().required('Username is required').min(6, 'Username must be at least 6 characters').max(20, 'Username must not exceed 20 characters'),\n    email: yup.string().required('Email is required').email('Email is invalid'),\n    password: yup.string().required('Password is required').min(6, 'Password must be at least 6 characters').max(40, 'Password must not exceed 40 characters'),\n    confirmPassword: yup.string().required('Confirm Password is required').oneOf([yup.ref('password'), null], 'Confirm Password does not match'),\n    acceptTerms: yup.bool().oneOf([true], 'Accept Terms is required')\n  });\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(validationSchema)\n  });\n  const onSubmit = data => {\n    console.log(JSON.stringify(data, null, 2));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Full Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          ...register('fullname'),\n          className: `form-control ${errors.fullname ? 'is-invalid' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: (_errors$fullname = errors.fullname) === null || _errors$fullname === void 0 ? void 0 : _errors$fullname.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          ...register('username'),\n          className: `form-control ${errors.username ? 'is-invalid' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: (_errors$username = errors.username) === null || _errors$username === void 0 ? void 0 : _errors$username.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          ...register('email'),\n          className: `form-control ${errors.email ? 'is-invalid' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          ...register('password'),\n          className: `form-control ${errors.password ? 'is-invalid' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          ...register('confirmPassword'),\n          className: `form-control ${errors.confirmPassword ? 'is-invalid' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: (_errors$confirmPasswo = errors.confirmPassword) === null || _errors$confirmPasswo === void 0 ? void 0 : _errors$confirmPasswo.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group form-check\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          ...register('acceptTerms'),\n          className: `form-check-input ${errors.acceptTerms ? 'is-invalid' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"acceptTerms\",\n          className: \"form-check-label\",\n          children: \"I have read and agree to the Terms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: (_errors$acceptTerms = errors.acceptTerms) === null || _errors$acceptTerms === void 0 ? void 0 : _errors$acceptTerms.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => reset(),\n          className: \"btn btn-warning float-right\",\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(Survey_, \"etQuphd8iAFR2Cjg/LHHyc51xOM=\", false, function () {\n  return [useForm];\n});\n_c = Survey_;\nexport default Survey_;\nvar _c;\n$RefreshReg$(_c, \"Survey_\");","map":{"version":3,"names":["React","yup","useForm","yupResolver","Survey_","validationSchema","object","shape","fullname","string","required","username","min","max","email","password","confirmPassword","oneOf","ref","acceptTerms","bool","register","handleSubmit","reset","formState","errors","resolver","onSubmit","data","console","log","JSON","stringify","message"],"sources":["C:/Users/Garik/Desktop/task2/client/src/components/Survey/Survey_.tsx"],"sourcesContent":["import React from 'react';\nimport * as yup from \"yup\";\nimport {useForm} from \"react-hook-form\";\nimport {yupResolver} from \"@hookform/resolvers/yup\";\n\nconst Survey_ = () => {\n    type UserSubmitForm = {\n        fullname: string;\n        username: string;\n        email: string;\n        password: string;\n        confirmPassword: string;\n        acceptTerms: boolean;\n    };\n\n    const validationSchema = yup.object().shape({\n        fullname: yup.string().required('Fullname is required'),\n        username: yup.string()\n            .required('Username is required')\n            .min(6, 'Username must be at least 6 characters')\n            .max(20, 'Username must not exceed 20 characters'),\n        email: yup.string()\n            .required('Email is required')\n            .email('Email is invalid'),\n        password: yup.string()\n            .required('Password is required')\n            .min(6, 'Password must be at least 6 characters')\n            .max(40, 'Password must not exceed 40 characters'),\n        confirmPassword: yup.string()\n            .required('Confirm Password is required')\n            .oneOf([yup.ref('password'), null], 'Confirm Password does not match'),\n        acceptTerms: yup.bool().oneOf([true], 'Accept Terms is required')\n    });\n\n    const {\n        register,\n        handleSubmit,\n        reset,\n        formState: { errors }\n    } = useForm<UserSubmitForm>({\n        resolver: yupResolver(validationSchema)\n    });\n\n    const onSubmit = (data: UserSubmitForm) => {\n        console.log(JSON.stringify(data, null, 2));\n    };\n\n    return (\n        <div className=\"register-form\">\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <div className=\"form-group\">\n                    <label>Full Name</label>\n                    <input\n                        type=\"text\"\n                        {...register('fullname')}\n                        className={`form-control ${errors.fullname ? 'is-invalid' : ''}`}\n                    />\n                    <div className=\"invalid-feedback\">{errors.fullname?.message}</div>\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Username</label>\n                    <input\n                        type=\"text\"\n                        {...register('username')}\n                        className={`form-control ${errors.username ? 'is-invalid' : ''}`}\n                    />\n                    <div className=\"invalid-feedback\">{errors.username?.message}</div>\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Email</label>\n                    <input\n                        type=\"text\"\n                        {...register('email')}\n                        className={`form-control ${errors.email ? 'is-invalid' : ''}`}\n                    />\n                    <div className=\"invalid-feedback\">{errors.email?.message}</div>\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Password</label>\n                    <input\n                        type=\"password\"\n                        {...register('password')}\n                        className={`form-control ${errors.password ? 'is-invalid' : ''}`}\n                    />\n                    <div className=\"invalid-feedback\">{errors.password?.message}</div>\n                </div>\n                <div className=\"form-group\">\n                    <label>Confirm Password</label>\n                    <input\n                        type=\"password\"\n                        {...register('confirmPassword')}\n                        className={`form-control ${\n                            errors.confirmPassword ? 'is-invalid' : ''\n                        }`}\n                    />\n                    <div className=\"invalid-feedback\">\n                        {errors.confirmPassword?.message}\n                    </div>\n                </div>\n\n                <div className=\"form-group form-check\">\n                    <input\n                        type=\"checkbox\"\n                        {...register('acceptTerms')}\n                        className={`form-check-input ${\n                            errors.acceptTerms ? 'is-invalid' : ''\n                        }`}\n                    />\n                    <label htmlFor=\"acceptTerms\" className=\"form-check-label\">\n                        I have read and agree to the Terms\n                    </label>\n                    <div className=\"invalid-feedback\">{errors.acceptTerms?.message}</div>\n                </div>\n\n                <div className=\"form-group\">\n                    <button type=\"submit\" className=\"btn btn-primary\">\n                        Register\n                    </button>\n                    <button\n                        type=\"button\"\n                        onClick={() => reset()}\n                        className=\"btn btn-warning float-right\"\n                    >\n                        Reset\n                    </button>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default Survey_;"],"mappings":"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"},"metadata":{},"sourceType":"module"}